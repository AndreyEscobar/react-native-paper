"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2063],{76374:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var o=n(87462),s=(n(67294),n(3905)),i=n(50214);n(58764);const c={title:"List.Accordion"},r=void 0,a={unversionedId:"components/List/ListAccordion",id:"components/List/ListAccordion",title:"List.Accordion",description:"A component used to display an expandable list item.",source:"@site/docs/components/List/ListAccordion.mdx",sourceDirName:"components/List",slug:"/components/List/ListAccordion",permalink:"/react-native-paper/docs/components/List/ListAccordion",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/List/ListAccordion.tsx",tags:[],version:"current",frontMatter:{title:"List.Accordion"},sidebar:"components",previous:{title:"IconButton",permalink:"/react-native-paper/docs/components/IconButton/"},next:{title:"List.AccordionGroup",permalink:"/react-native-paper/docs/components/List/ListAccordionGroup"}},p={},d=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],l={toc:d};function m(t){let{components:e,...n}=t;return(0,s.kt)("wrapper",(0,o.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"A component used to display an expandable list item."),(0,s.kt)("div",{class:"screenshots"},(0,s.kt)("img",{class:"medium",src:"/react-native-paper/screenshots/list-accordion-1.png"}),(0,s.kt)("img",{class:"medium",src:"/react-native-paper/screenshots/list-accordion-2.png"}),(0,s.kt)("img",{class:"medium",src:"/react-native-paper/screenshots/list-accordion-3.png"})),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { List } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [expanded, setExpanded] = React.useState(true);\n\n  const handlePress = () => setExpanded(!expanded);\n\n  return (\n    <List.Section title="Accordions">\n      <List.Accordion\n        title="Uncontrolled Accordion"\n        left={props => <List.Icon {...props} icon="folder" />}>\n        <List.Item title="First item" />\n        <List.Item title="Second item" />\n      </List.Accordion>\n\n      <List.Accordion\n        title="Controlled Accordion"\n        left={props => <List.Icon {...props} icon="folder" />}\n        expanded={expanded}\n        onPress={handlePress}>\n        <List.Item title="First item" />\n        <List.Item title="Second item" />\n      </List.Accordion>\n    </List.Section>\n  );\n};\n\nexport default MyComponent;\n')),(0,s.kt)("span",null),(0,s.kt)("h2",{id:"props"},"Props"),(0,s.kt)(i.Z,{link:"List/ListAccordion",mdxType:"PropTable"}),(0,s.kt)("p",null,"null"))}m.isMDXComponent=!0}}]);