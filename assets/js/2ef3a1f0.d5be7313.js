"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7306],{85791:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>i,frontMatter:()=>u,metadata:()=>g,toc:()=>p});var n=o(87462),s=(o(67294),o(3905)),a=o(50214);o(58764);const u={title:"ToggleButton"},l=void 0,g={unversionedId:"components/ToggleButton/ToggleButton",id:"components/ToggleButton/ToggleButton",title:"ToggleButton",description:"Toggle buttons can be used to group related options. To emphasize groups of related toggle buttons,",source:"@site/docs/components/ToggleButton/ToggleButton.mdx",sourceDirName:"components/ToggleButton",slug:"/components/ToggleButton/",permalink:"/react-native-paper/docs/components/ToggleButton/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/ToggleButton/ToggleButton.tsx",tags:[],version:"current",frontMatter:{title:"ToggleButton"},sidebar:"components",previous:{title:"TextInput.Icon",permalink:"/react-native-paper/docs/components/TextInput/TextInputIcon"},next:{title:"ToggleButton.Group",permalink:"/react-native-paper/docs/components/ToggleButton/ToggleButtonGroup"}},r={},p=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],c={toc:p};function i(t){let{components:e,...o}=t;return(0,s.kt)("wrapper",(0,n.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Toggle buttons can be used to group related options. To emphasize groups of related toggle buttons,\na group should share a common container."),(0,s.kt)("div",{class:"screenshots"},(0,s.kt)("img",{class:"medium",src:"/react-native-paper/screenshots/toggle-button.png"})),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { ToggleButton } from 'react-native-paper';\n\nconst ToggleButtonExample = () => {\n  const [status, setStatus] = React.useState('checked');\n\n  const onButtonToggle = value => {\n    setStatus(status === 'checked' ? 'unchecked' : 'checked');\n  };\n\n  return (\n    <ToggleButton\n      icon=\"bluetooth\"\n      value=\"bluetooth\"\n      status={status}\n      onPress={onButtonToggle}\n    />\n  );\n};\n\nexport default ToggleButtonExample;\n\n")),(0,s.kt)("span",null),(0,s.kt)("h2",{id:"props"},"Props"),(0,s.kt)(a.Z,{link:"ToggleButton/ToggleButton",mdxType:"PropTable"}),(0,s.kt)("span",null))}i.isMDXComponent=!0}}]);