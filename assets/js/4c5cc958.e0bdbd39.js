"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2577],{26588:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var n=o(87462),s=(o(67294),o(3905)),i=o(50214);o(58764);const l={title:"Tooltip"},p=void 0,a={unversionedId:"components/Tooltip/Tooltip",id:"components/Tooltip/Tooltip",title:"Tooltip",description:"Tooltips display informative text when users hover over, focus on, or tap an element.",source:"@site/docs/components/Tooltip/Tooltip.mdx",sourceDirName:"components/Tooltip",slug:"/components/Tooltip/",permalink:"/react-native-paper/docs/components/Tooltip/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Tooltip/Tooltip.tsx",tags:[],version:"current",frontMatter:{title:"Tooltip"},sidebar:"components",previous:{title:"ToggleButton.Row",permalink:"/react-native-paper/docs/components/ToggleButton/ToggleButtonRow"},next:{title:"TouchableRipple",permalink:"/react-native-paper/docs/components/TouchableRipple/"}},r={},c=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],u={toc:c};function d(t){let{components:e,...o}=t;return(0,s.kt)("wrapper",(0,n.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Tooltips display informative text when users hover over, focus on, or tap an element."),(0,s.kt)("p",null,"Plain tooltips, when activated, display a text label identifying an element, such as a description of its function. Tooltips should include only short, descriptive text and avoid restating visible UI text."),(0,s.kt)("div",{class:"screenshots"},(0,s.kt)("figure",null,(0,s.kt)("img",{class:"small",src:"/react-native-paper/screenshots/tooltip.png"}))),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { IconButton, Tooltip } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Tooltip title=\"Selected Camera\">\n    <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\n  </Tooltip>\n);\n\nexport default MyComponent;\n")),(0,s.kt)("span",null),(0,s.kt)("h2",{id:"props"},"Props"),(0,s.kt)(i.Z,{link:"Tooltip/Tooltip",mdxType:"PropTable"}),(0,s.kt)("p",null,"null"))}d.isMDXComponent=!0}}]);