"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[625],{94053:(t,o,e)=>{e.r(o),e.d(o,{assets:()=>p,contentTitle:()=>s,default:()=>T,frontMatter:()=>r,metadata:()=>u,toc:()=>c});var n=e(87462),l=(e(67294),e(3905)),a=e(50214),g=(e(58764),e(29518));const r={title:"ToggleButton.Row"},s=void 0,u={unversionedId:"components/ToggleButton/ToggleButtonRow",id:"components/ToggleButton/ToggleButtonRow",title:"ToggleButton.Row",description:"Toggle button row renders a group of toggle buttons in a row.",source:"@site/docs/components/ToggleButton/ToggleButtonRow.mdx",sourceDirName:"components/ToggleButton",slug:"/components/ToggleButton/ToggleButtonRow",permalink:"/react-native-paper/docs/components/ToggleButton/ToggleButtonRow",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/ToggleButton/ToggleButtonRow.tsx",tags:[],version:"current",frontMatter:{title:"ToggleButton.Row"},sidebar:"components",previous:{title:"ToggleButton.Group",permalink:"/react-native-paper/docs/components/ToggleButton/ToggleButtonGroup"},next:{title:"Tooltip",permalink:"/react-native-paper/docs/components/Tooltip/"}},p={},c=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],i={toc:c};function T(t){let{components:o,...e}=t;return(0,l.kt)("wrapper",(0,n.Z)({},i,e,{components:o,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Toggle button row renders a group of toggle buttons in a row."),(0,l.kt)(g.Z,{screenshotData:"screenshots/toggle-button-row.gif",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { ToggleButton } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState(\'left\');\n\n  return (\n    <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n      <ToggleButton icon="format-align-left" value="left" />\n      <ToggleButton icon="format-align-right" value="right" />\n    </ToggleButton.Row>\n  );\n};\n\nexport default MyComponent;\n\n')),(0,l.kt)("span",null),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)(a.Z,{link:"ToggleButton/ToggleButtonRow",mdxType:"PropTable"}),(0,l.kt)("span",null),(0,l.kt)("span",null))}T.isMDXComponent=!0}}]);