"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2041],{29077:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>x,frontMatter:()=>p,metadata:()=>d,toc:()=>T});var n=a(87462),l=(a(67294),a(3905)),r=a(50214),i=a(58764),o=a(29518);const p={title:"Text"},s=void 0,d={unversionedId:"components/Text/Text",id:"components/Text/Text",title:"Text",description:"Typography component showing styles complied with passed variant prop and supported by the type system.",source:"@site/docs/components/Text/Text.mdx",sourceDirName:"components/Text",slug:"/components/Text/",permalink:"/react-native-paper/docs/components/Text/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Typography/Text.tsx",tags:[],version:"current",frontMatter:{title:"Text"},sidebar:"components",previous:{title:"Switch",permalink:"/react-native-paper/docs/components/Switch/"},next:{title:"TextInput",permalink:"/react-native-paper/docs/components/TextInput/"}},m={},T=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:'variant  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"variant--available-in-v5x-with-theme-version-3",level:3},{value:"children (required)",id:"children-required",level:3},{value:"theme",id:"theme",level:3},{value:"style",id:"style",level:3},{value:"Theme colors",id:"theme-colors",level:2}],c={toc:T};function x(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Typography component showing styles complied with passed ",(0,l.kt)("inlineCode",{parentName:"p"},"variant")," prop and supported by the type system."),(0,l.kt)(o.Z,{screenshotData:"screenshots/typography.png",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { Text } from \'react-native-paper\';\n\nconst MyComponent = () => (\n  <>\n    <Text variant="displayLarge">Display Large</Text>\n    <Text variant="displayMedium">Display Medium</Text>\n    <Text variant="displaySmall">Display small</Text>\n\n    <Text variant="headlineLarge">Headline Large</Text>\n    <Text variant="headlineMedium">Headline Medium</Text>\n    <Text variant="headlineSmall">Headline Small</Text>\n\n    <Text variant="titleLarge">Title Large</Text>\n    <Text variant="titleMedium">Title Medium</Text>\n    <Text variant="titleSmall">Title Small</Text>\n\n    <Text variant="bodyLarge">Body Large</Text>\n    <Text variant="bodyMedium">Body Medium</Text>\n    <Text variant="bodySmall">Body Small</Text>\n\n    <Text variant="labelLarge">Label Large</Text>\n    <Text variant="labelMedium">Label Medium</Text>\n    <Text variant="labelSmall">Label Small</Text>\n </>\n);\n\nexport default MyComponent;\n')),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"variant--available-in-v5x-with-theme-version-3"},"variant  ",(0,l.kt)("span",{class:"badge badge-supported "},(0,l.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,l.kt)(r.Z,{componentLink:"Typography/Text",prop:"variant",mdxType:"PropTable"}),(0,l.kt)("hr",null),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"children-required"},"children (required)")),(0,l.kt)(r.Z,{componentLink:"Typography/Text",prop:"children",mdxType:"PropTable"}),(0,l.kt)("hr",null),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"theme"},"theme")),(0,l.kt)(r.Z,{componentLink:"Typography/Text",prop:"theme",mdxType:"PropTable"}),(0,l.kt)("hr",null),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"style"},"style")),(0,l.kt)(r.Z,{componentLink:"Typography/Text",prop:"style",mdxType:"PropTable"}),(0,l.kt)("hr",null),(0,l.kt)("span",null),(0,l.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,l.kt)(i.Z,{themeColorsData:{"-":{textColor:"theme.colors.onSurface"}},componentName:"Text",mdxType:"ThemeColorsTable"}),(0,l.kt)("span",null))}x.isMDXComponent=!0}}]);