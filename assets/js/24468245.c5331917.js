"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3891],{85255:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>u,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var n=o(87462),a=(o(67294),o(3905)),i=o(50214);o(58764);const s={title:"RadioButton.Item"},u=void 0,r={unversionedId:"components/RadioButton/RadioButtonItem",id:"components/RadioButton/RadioButtonItem",title:"RadioButton.Item",description:"RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.",source:"@site/docs/components/RadioButton/RadioButtonItem.mdx",sourceDirName:"components/RadioButton",slug:"/components/RadioButton/RadioButtonItem",permalink:"/react-native-paper/docs/components/RadioButton/RadioButtonItem",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/RadioButton/RadioButtonItem.tsx",tags:[],version:"current",frontMatter:{title:"RadioButton.Item"},sidebar:"components",previous:{title:"RadioButton.IOS",permalink:"/react-native-paper/docs/components/RadioButton/RadioButtonIOS"},next:{title:"Searchbar",permalink:"/react-native-paper/docs/components/Searchbar"}},l={},d=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],p={toc:d};function c(t){let{components:e,...o}=t;return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton."),(0,a.kt)("div",{class:"screenshots"},(0,a.kt)("figure",null,(0,a.kt)("img",{class:"medium",src:"/react-native-paper/screenshots/radio-item.ios.png"}),(0,a.kt)("figcaption",null,"Pressed"))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { RadioButton } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState(\'first\');\n\n  return (\n    <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n      <RadioButton.Item label="First item" value="first" />\n      <RadioButton.Item label="Second item" value="second" />\n    </RadioButton.Group>\n  );\n};\n\nexport default MyComponent;\n')),(0,a.kt)("span",null),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)(i.Z,{link:"RadioButton/RadioButtonItem",mdxType:"PropTable"}),(0,a.kt)("p",null,"null"))}c.isMDXComponent=!0}}]);