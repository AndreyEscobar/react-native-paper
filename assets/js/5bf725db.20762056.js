"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3581],{23682:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>m,contentTitle:()=>d,default:()=>k,frontMatter:()=>p,metadata:()=>c,toc:()=>u});var t=o(87462),l=(o(67294),o(3905)),n=o(6271),a=o(47582),s=o(58764),r=o(29518);const p={title:"Dialog"},d=void 0,c={unversionedId:"components/Dialog/Dialog",id:"components/Dialog/Dialog",title:"Dialog",description:"Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.",source:"@site/docs/components/Dialog/Dialog.mdx",sourceDirName:"components/Dialog",slug:"/components/Dialog/",permalink:"/react-native-paper/docs/components/Dialog/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Dialog/Dialog.tsx",tags:[],version:"current",frontMatter:{title:"Dialog"},sidebar:"components",previous:{title:"DataTable.Title",permalink:"/react-native-paper/docs/components/DataTable/DataTableTitle"},next:{title:"Dialog.Actions",permalink:"/react-native-paper/docs/components/Dialog/DialogActions"}},m={},u=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"dismissable",id:"dismissable",level:3},{value:"dismissableBackButton",id:"dismissablebackbutton",level:3},{value:"onDismiss",id:"ondismiss",level:3},{value:"visible",id:"visible",level:3},{value:"children (required)",id:"children-required",level:3},{value:"style",id:"style",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3},{value:"Theme colors",id:"theme-colors",level:2}],D={toc:u};function k(e){let{components:i,...o}=e;return(0,l.kt)("wrapper",(0,t.Z)({},D,o,{components:i,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\nTo render the ",(0,l.kt)("inlineCode",{parentName:"p"},"Dialog")," above other components, you'll need to wrap it with the ",(0,l.kt)("a",{parentName:"p",href:"../../Portal"},(0,l.kt)("inlineCode",{parentName:"a"},"Portal"))," component."),(0,l.kt)(r.Z,{screenshotData:"screenshots/dialog-1.png",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Button, Dialog, Portal, PaperProvider, Text } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showDialog = () => setVisible(true);\n\n  const hideDialog = () => setVisible(false);\n\n  return (\n    <PaperProvider>\n      <View>\n        <Button onPress={showDialog}>Show Dialog</Button>\n        <Portal>\n          <Dialog visible={visible} onDismiss={hideDialog}>\n            <Dialog.Title>Alert</Dialog.Title>\n            <Dialog.Content>\n              <Text variant=\"bodyMedium\">This is simple dialog</Text>\n            </Dialog.Content>\n            <Dialog.Actions>\n              <Button onPress={hideDialog}>Done</Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </PaperProvider>\n  );\n};\n\nexport default MyComponent;\n")),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)(a.Z,{componentLink:"Dialog/Dialog",mdxType:"ExtendsLink"}),(0,l.kt)("hr",null),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"dismissable"},"dismissable")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"dismissable",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"dismissablebackbutton"},"dismissableBackButton")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"dismissableBackButton",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"ondismiss"},"onDismiss")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"onDismiss",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"visible"},"visible")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"visible",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"children-required"},"children (required)")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"children",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"style"},"style")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"style",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"theme"},"theme")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"theme",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"testid"},"testID")),(0,l.kt)(n.Z,{componentLink:"Dialog/Dialog",prop:"testID",mdxType:"PropTable"}),(0,l.kt)("span",null),(0,l.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,l.kt)(s.Z,{themeColorsData:{"-":{backgroundColor:"theme.colors.elevation.level3"}},componentName:"Dialog",mdxType:"ThemeColorsTable"}),(0,l.kt)("span",null))}k.isMDXComponent=!0}}]);