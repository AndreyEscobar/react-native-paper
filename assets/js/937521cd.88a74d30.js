"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2041],{29077:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var n=a(87462),o=(a(67294),a(3905)),r=a(50214),l=a(58764);const i={title:"Text"},s=void 0,p={unversionedId:"components/Text/Text",id:"components/Text/Text",title:"Text",description:"Typography component showing styles complied with passed variant prop and supported by the type system.",source:"@site/docs/components/Text/Text.mdx",sourceDirName:"components/Text",slug:"/components/Text/",permalink:"/react-native-paper/docs/components/Text/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Typography/Text.tsx",tags:[],version:"current",frontMatter:{title:"Text"},sidebar:"components",previous:{title:"Switch",permalink:"/react-native-paper/docs/components/Switch/"},next:{title:"TextInput",permalink:"/react-native-paper/docs/components/TextInput/"}},m={},d=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Theme colors",id:"theme-colors",level:2}],T={toc:d};function c(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Typography component showing styles complied with passed ",(0,o.kt)("inlineCode",{parentName:"p"},"variant")," prop and supported by the type system."),(0,o.kt)("div",{class:"screenshots"},(0,o.kt)("img",{class:"small",src:"/react-native-paper/screenshots/typography.png"})),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { Text } from \'react-native-paper\';\n\nconst MyComponent = () => (\n  <>\n    <Text variant="displayLarge">Display Large</Text>\n    <Text variant="displayMedium">Display Medium</Text>\n    <Text variant="displaySmall">Display small</Text>\n\n    <Text variant="headlineLarge">Headline Large</Text>\n    <Text variant="headlineMedium">Headline Medium</Text>\n    <Text variant="headlineSmall">Headline Small</Text>\n\n    <Text variant="titleLarge">Title Large</Text>\n    <Text variant="titleMedium">Title Medium</Text>\n    <Text variant="titleSmall">Title Small</Text>\n\n    <Text variant="bodyLarge">Body Large</Text>\n    <Text variant="bodyMedium">Body Medium</Text>\n    <Text variant="bodySmall">Body Small</Text>\n\n    <Text variant="labelLarge">Label Large</Text>\n    <Text variant="labelMedium">Label Medium</Text>\n    <Text variant="labelSmall">Label Small</Text>\n </>\n);\n\nexport default MyComponent;\n')),(0,o.kt)("span",null),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)(r.Z,{link:"Typography/Text",mdxType:"PropTable"}),(0,o.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,o.kt)(l.Z,{data:{"-":{textColor:"theme.colors.onSurface"}},componentName:"Text",mdxType:"ThemeColorsTable"}))}c.isMDXComponent=!0}}]);