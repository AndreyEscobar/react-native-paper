"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2851],{42300:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>p});var a=n(87462),r=(n(67294),n(3905)),o=n(50214),s=n(58764);const c={title:"Card"},i=void 0,d={unversionedId:"components/Card/Card",id:"components/Card/Card",title:"Card",description:"A card is a sheet of material that serves as an entry point to more detailed information.",source:"@site/docs/components/Card/Card.mdx",sourceDirName:"components/Card",slug:"/components/Card/",permalink:"/react-native-paper/docs/components/Card/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Card/Card.tsx",tags:[],version:"current",frontMatter:{title:"Card"},sidebar:"components",previous:{title:"Button",permalink:"/react-native-paper/docs/components/Button/"},next:{title:"Card.Actions",permalink:"/react-native-paper/docs/components/Card/CardActions"}},l={},p=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Theme colors",id:"theme-colors",level:2}],u={toc:p};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A card is a sheet of material that serves as an entry point to more detailed information."),(0,r.kt)("div",{class:"screenshots"},(0,r.kt)("figure",null,(0,r.kt)("img",{src:"/react-native-paper/screenshots/card-1.png"}),(0,r.kt)("figcaption",null,"Elevated card")),(0,r.kt)("figure",null,(0,r.kt)("img",{src:"/react-native-paper/screenshots/card-2.png"}),(0,r.kt)("figcaption",null,"Outlined card")),(0,r.kt)("figure",null,(0,r.kt)("img",{src:"/react-native-paper/screenshots/card-3.png"}),(0,r.kt)("figcaption",null,"Contained card"))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { Avatar, Button, Card, Text } from \'react-native-paper\';\n\nconst LeftContent = props => <Avatar.Icon {...props} icon="folder" />\n\nconst MyComponent = () => (\n  <Card>\n    <Card.Title title="Card Title" subtitle="Card Subtitle" left={LeftContent} />\n    <Card.Content>\n      <Text variant="titleLarge">Card title</Text>\n      <Text variant="bodyMedium">Card content</Text>\n    </Card.Content>\n    <Card.Cover source={{ uri: \'https://picsum.photos/700\' }} />\n    <Card.Actions>\n      <Button>Cancel</Button>\n      <Button>Ok</Button>\n    </Card.Actions>\n  </Card>\n);\n\nexport default MyComponent;\n')),(0,r.kt)("span",null),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)(o.Z,{link:"Card/Card",mdxType:"PropTable"}),(0,r.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,r.kt)(s.Z,{data:{contained:{backgroundColor:"theme.colors.surfaceVariant"},elevated:{backgroundColor:"theme.colors.elevation.level1"},outlined:{backgroundColor:"theme.colors.surface",borderColor:"theme.colors.outline"}},componentName:"Card",mdxType:"ThemeColorsTable"}))}m.isMDXComponent=!0}}]);